#include <Arduino.h>
#include <Wire.h>
 
// INA237 I2C address (default: A0 = GND, A1 = GND => 0x40)
#define INA237_ADDR 0x40
 
// INA237 register addresses
#define REG_CONFIG       0x00
#define REG_ADC_CONFIG   0x01
#define REG_SHUNT_CAL    0x02
#define REG_VSHUNT       0x04
#define REG_VBUS         0x05
#define REG_DIETEMP      0x06
#define REG_CURRENT      0x07
#define REG_POWER        0x08
 
// Shunt resistor parameters
const float R_SHUNT = 0.0005;        // 0.5 mΩ
const float CURRENT_LSB = 0.001;     // 1 mA per bit (resolution)
 
// Calculate SHUNT_CAL register value
uint16_t calcShuntCal() {
  return uint16_t(0.00512 / (CURRENT_LSB * R_SHUNT));
}
 
// Write 16-bit value to INA237 register
void writeRegister(uint8_t reg, uint16_t value) {
  Wire.beginTransmission(INA237_ADDR);
  Wire.write(reg);
  Wire.write(value >> 8);
  Wire.write(value & 0xFF);
  Wire.endTransmission();
}
 
// Read unsigned 16-bit value from INA237
uint16_t readRegister16(uint8_t reg) {
  Wire.beginTransmission(INA237_ADDR);
  Wire.write(reg);
  Wire.endTransmission(false);
  Wire.requestFrom(INA237_ADDR, 2);
  return (Wire.read() << 8) | Wire.read();
}
 
// Read signed 16-bit value
int16_t readRegister16Signed(uint8_t reg) {
  return static_cast<int16_t>(readRegister16(reg));
}
 
// Read 24-bit unsigned value (for power)
uint32_t readRegister24(uint8_t reg) {
  Wire.beginTransmission(INA237_ADDR);
  Wire.write(reg);
  Wire.endTransmission(false);
  Wire.requestFrom(INA237_ADDR, 3);
  uint32_t value = ((uint32_t)Wire.read() << 16) |
                   ((uint32_t)Wire.read() << 8) |
                   (uint32_t)Wire.read();
  return value;
}
 
// INA237 configuration setup
void setupINA237() {
  writeRegister(REG_CONFIG, 0x0000);       // Default range (±163.84 mV)
  writeRegister(REG_ADC_CONFIG, 0xFB68);   // Continuous Vbus, Vshunt, Temp, 1052 µs
 
  uint16_t shuntCal = calcShuntCal();      // Based on 0.5 mΩ, 1 mA/bit
  writeRegister(REG_SHUNT_CAL, shuntCal);
}
 
void setup() {
  Serial.begin(115200);
  Wire.begin();  // ESP32 defaults: SDA = GPIO21, SCL = GPIO22
  setupINA237();
}
 
void loop() {
  int16_t vShuntRaw = readRegister16Signed(REG_VSHUNT);   // 5 µV/LSB
  uint16_t vBusRaw = readRegister16(REG_VBUS);            // 3.125 mV/LSB
  int16_t tempRaw = readRegister16(REG_DIETEMP);          // [15:4] = signed 12-bit
  int16_t temp12bit = tempRaw >> 4;                       // Corrected format
  int16_t currentRaw = readRegister16Signed(REG_CURRENT); // 1 mA/bit
  uint32_t powerRaw = readRegister24(REG_POWER);          // W = CURRENT_LSB * VBUS
 
  // Convert raw readings
  float vBus = vBusRaw * 0.003125;          // V
  float vShunt = vShuntRaw * 0.000005;      // V
  float current = currentRaw * CURRENT_LSB; // A
  float power = powerRaw * CURRENT_LSB * vBus; // W
  float temperature = temp12bit * 0.125;     // °C
 
  // Output to serial
  Serial.println("------ INA237 Measurements ------");
  Serial.printf("Bus Voltage   : %.3f V\n", vBus);
  Serial.printf("Shunt Voltage : %.6f V\n", vShunt);
  Serial.printf("Current       : %.3f A\n", current);
  Serial.printf("Power         : %.3f W\n", power);
  Serial.printf("Temperature   : %.2f °C\n", temperature);
  Serial.println("----------------------------------\n");
 
  delay(1000); // Wait 1 second
}